h2.svelte-26pfj0{margin-top:2rem;margin-bottom:3.5rem}.postFilter.svelte-26pfj0{margin-bottom:0.5rem}.cont.svelte-26pfj0{display:flex;flex:1;align-self:center;flex-direction:row;justify-content:space-evenly;align-items:flex-start;flex-wrap:wrap;margin:1rem;max-width:70em}.placeholder.svelte-26pfj0{visibility:hidden;width:30rem;height:0;margin-left:1rem;margin-right:1rem;border:1px solid #fff}@media(max-width: 40rem){h2.svelte-26pfj0{margin-bottom:2rem}.cont.svelte-26pfj0{flex-direction:column;justify-content:flex-start;align-items:center;margin-left:-2rem;margin-right:-2rem}.placeholder.svelte-26pfj0{display:none}}
.cont.svelte-1jd95ya{position:relative;min-height:25rem;height:calc(100vh - 4em);width:calc(100vw - 4em)}.intro.svelte-1jd95ya{padding-left:1rem;padding-top:10rem;padding-right:8rem}@media(min-width: 400){h1.svelte-1jd95ya{font-size:4em}.intro.svelte-1jd95ya{padding-right:0rem}}.intro-svg.svelte-1jd95ya{position:absolute;bottom:0;right:-1rem;width:100%;max-width:42rem;min-width:35rem;overflow:hidden;z-index:-1}.down-arrow.svelte-1jd95ya{position:absolute;bottom:4rem;left:calc(50vw - 4em);color:rgb(255, 62, 0);height:2.5rem;width:2.5rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */