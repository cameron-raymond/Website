(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1756483952682;

	const files = [
		"service-worker-index.html",
		"CNAME",
		"cameron-raymond-resume.pdf",
		"content/about/booklist.md",
		"content/about/bottom-content.md",
		"content/about/current-meme.png",
		"content/about/current-meme.webp",
		"content/about/intro.md",
		"content/about/portrait.png",
		"content/about/portrait.webp",
		"content/blog/anything2vec.md",
		"content/blog/bitmoji-segmentation.md",
		"content/blog/covid-music.md",
		"content/blog/covid-rct-trial.md",
		"content/blog/gpt5.md",
		"content/blog/messaging-interoperability.md",
		"content/blog/omnimoderationlatest.md",
		"content/blog/openai-update.md",
		"content/blog/oxford-thesis.md",
		"content/blog/political-community-embedding.md",
		"content/blog/political-topic-centrality-1.md",
		"content/blog/political-topic-centrality-2.md",
		"content/blog/political-topic-centrality-3.md",
		"content/blog/political-topic-centrality.md",
		"content/blog/power-simulations-in-r.md",
		"content/blog/right-to-be-forgotten-ml.md",
		"content/blog/rl-for-traffic-flow.md",
		"content/blog/shakespeare-netlsd.md",
		"content/blog/stochastic-blockmodels.md",
		"content/blog/trustcon.md",
		"content/blog/word2vec-cultural-dims.md",
		"content/openai-update/bell-curve.png",
		"content/openai-update/header.png",
		"content/political-community-embedding/Measuring_Alignment_of_Online_Grassroots_Political_Communities_with_Political_Campaigns.pdf",
		"content/rl-for-traffic-flow/CO2_LoopRoute_EGreedy.png",
		"content/rl-for-traffic-flow/CO2_LoopRoute_Softmax.png",
		"content/rl-for-traffic-flow/CO2_NormalRoute_EGreedy.png",
		"content/rl-for-traffic-flow/CO2_NormalRoute_Softmax.png",
		"content/rl-for-traffic-flow/DailyAvg_LoopRoute_EGreedy.png",
		"content/rl-for-traffic-flow/DailyAvg_LoopRoute_Softmax.png",
		"content/rl-for-traffic-flow/DailyAvg_NormalRoute_EGreedy.png",
		"content/rl-for-traffic-flow/DailyAvg_NormalRoute_Softmax.png",
		"content/rl-for-traffic-flow/OneDay_NormalRoute_EGreedy.png",
		"content/rl-for-traffic-flow/showcase.gif",
		"content/rl-for-traffic-flow/traffic-setup.png",
		"favicon.png",
		"global.css",
		"intro.svg",
		"logo-150.png",
		"logo-310.png",
		"manifest.json",
		"networkd.png",
		"robots.txt",
		"summary_about_large.png",
		"summary_large_image.png",
		"tags/bp.png",
		"tags/bp.webp",
		"tags/ci.png",
		"tags/ci.webp",
		"tags/gt.png",
		"tags/gt.webp",
		"tags/ml.png",
		"tags/ml.webp",
		"tags/nlp.png",
		"tags/nlp.webp",
		"tags/pl.png",
		"tags/pl.webp",
		"tags/rl.png",
		"tags/rl.webp",
		"tags/rp.png",
		"tags/rp.webp",
		"tags/sp.png",
		"tags/sp.webp"
	];

	const shell = [
		"client/client.7b182c1d.js",
		"client/Head.84dd9d94.js",
		"client/Tag.c6e43cd8.js",
		"client/index.aa12a41f.js",
		"client/PostFilter.04851373.js",
		"client/index.a3f3546f.js",
		"client/booklist.a254fccf.js",
		"client/index.46d30bdc.js",
		"client/[slug].5aea982d.js",
		"client/sapper-dev-client.1e7a4a5e.js",
		"client/client.c2fefc72.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS13b3JrZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlX21vZHVsZXMvQHNhcHBlci9zZXJ2aWNlLXdvcmtlci5qcyIsIi4uLy4uL3NyYy9zZXJ2aWNlLXdvcmtlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IFNhcHBlciDigJQgZG8gbm90IGVkaXQgaXQhXG5leHBvcnQgY29uc3QgdGltZXN0YW1wID0gMTc1NjQ4Mzk1MjY4MjtcblxuZXhwb3J0IGNvbnN0IGZpbGVzID0gW1xuXHRcInNlcnZpY2Utd29ya2VyLWluZGV4Lmh0bWxcIixcblx0XCJDTkFNRVwiLFxuXHRcImNhbWVyb24tcmF5bW9uZC1yZXN1bWUucGRmXCIsXG5cdFwiY29udGVudC9hYm91dC9ib29rbGlzdC5tZFwiLFxuXHRcImNvbnRlbnQvYWJvdXQvYm90dG9tLWNvbnRlbnQubWRcIixcblx0XCJjb250ZW50L2Fib3V0L2N1cnJlbnQtbWVtZS5wbmdcIixcblx0XCJjb250ZW50L2Fib3V0L2N1cnJlbnQtbWVtZS53ZWJwXCIsXG5cdFwiY29udGVudC9hYm91dC9pbnRyby5tZFwiLFxuXHRcImNvbnRlbnQvYWJvdXQvcG9ydHJhaXQucG5nXCIsXG5cdFwiY29udGVudC9hYm91dC9wb3J0cmFpdC53ZWJwXCIsXG5cdFwiY29udGVudC9ibG9nL2FueXRoaW5nMnZlYy5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9iaXRtb2ppLXNlZ21lbnRhdGlvbi5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9jb3ZpZC1tdXNpYy5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9jb3ZpZC1yY3QtdHJpYWwubWRcIixcblx0XCJjb250ZW50L2Jsb2cvZ3B0NS5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9tZXNzYWdpbmctaW50ZXJvcGVyYWJpbGl0eS5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9vbW5pbW9kZXJhdGlvbmxhdGVzdC5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9vcGVuYWktdXBkYXRlLm1kXCIsXG5cdFwiY29udGVudC9ibG9nL294Zm9yZC10aGVzaXMubWRcIixcblx0XCJjb250ZW50L2Jsb2cvcG9saXRpY2FsLWNvbW11bml0eS1lbWJlZGRpbmcubWRcIixcblx0XCJjb250ZW50L2Jsb2cvcG9saXRpY2FsLXRvcGljLWNlbnRyYWxpdHktMS5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9wb2xpdGljYWwtdG9waWMtY2VudHJhbGl0eS0yLm1kXCIsXG5cdFwiY29udGVudC9ibG9nL3BvbGl0aWNhbC10b3BpYy1jZW50cmFsaXR5LTMubWRcIixcblx0XCJjb250ZW50L2Jsb2cvcG9saXRpY2FsLXRvcGljLWNlbnRyYWxpdHkubWRcIixcblx0XCJjb250ZW50L2Jsb2cvcG93ZXItc2ltdWxhdGlvbnMtaW4tci5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9yaWdodC10by1iZS1mb3Jnb3R0ZW4tbWwubWRcIixcblx0XCJjb250ZW50L2Jsb2cvcmwtZm9yLXRyYWZmaWMtZmxvdy5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy9zaGFrZXNwZWFyZS1uZXRsc2QubWRcIixcblx0XCJjb250ZW50L2Jsb2cvc3RvY2hhc3RpYy1ibG9ja21vZGVscy5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy90cnVzdGNvbi5tZFwiLFxuXHRcImNvbnRlbnQvYmxvZy93b3JkMnZlYy1jdWx0dXJhbC1kaW1zLm1kXCIsXG5cdFwiY29udGVudC9vcGVuYWktdXBkYXRlL2JlbGwtY3VydmUucG5nXCIsXG5cdFwiY29udGVudC9vcGVuYWktdXBkYXRlL2hlYWRlci5wbmdcIixcblx0XCJjb250ZW50L3BvbGl0aWNhbC1jb21tdW5pdHktZW1iZWRkaW5nL01lYXN1cmluZ19BbGlnbm1lbnRfb2ZfT25saW5lX0dyYXNzcm9vdHNfUG9saXRpY2FsX0NvbW11bml0aWVzX3dpdGhfUG9saXRpY2FsX0NhbXBhaWducy5wZGZcIixcblx0XCJjb250ZW50L3JsLWZvci10cmFmZmljLWZsb3cvQ08yX0xvb3BSb3V0ZV9FR3JlZWR5LnBuZ1wiLFxuXHRcImNvbnRlbnQvcmwtZm9yLXRyYWZmaWMtZmxvdy9DTzJfTG9vcFJvdXRlX1NvZnRtYXgucG5nXCIsXG5cdFwiY29udGVudC9ybC1mb3ItdHJhZmZpYy1mbG93L0NPMl9Ob3JtYWxSb3V0ZV9FR3JlZWR5LnBuZ1wiLFxuXHRcImNvbnRlbnQvcmwtZm9yLXRyYWZmaWMtZmxvdy9DTzJfTm9ybWFsUm91dGVfU29mdG1heC5wbmdcIixcblx0XCJjb250ZW50L3JsLWZvci10cmFmZmljLWZsb3cvRGFpbHlBdmdfTG9vcFJvdXRlX0VHcmVlZHkucG5nXCIsXG5cdFwiY29udGVudC9ybC1mb3ItdHJhZmZpYy1mbG93L0RhaWx5QXZnX0xvb3BSb3V0ZV9Tb2Z0bWF4LnBuZ1wiLFxuXHRcImNvbnRlbnQvcmwtZm9yLXRyYWZmaWMtZmxvdy9EYWlseUF2Z19Ob3JtYWxSb3V0ZV9FR3JlZWR5LnBuZ1wiLFxuXHRcImNvbnRlbnQvcmwtZm9yLXRyYWZmaWMtZmxvdy9EYWlseUF2Z19Ob3JtYWxSb3V0ZV9Tb2Z0bWF4LnBuZ1wiLFxuXHRcImNvbnRlbnQvcmwtZm9yLXRyYWZmaWMtZmxvdy9PbmVEYXlfTm9ybWFsUm91dGVfRUdyZWVkeS5wbmdcIixcblx0XCJjb250ZW50L3JsLWZvci10cmFmZmljLWZsb3cvc2hvd2Nhc2UuZ2lmXCIsXG5cdFwiY29udGVudC9ybC1mb3ItdHJhZmZpYy1mbG93L3RyYWZmaWMtc2V0dXAucG5nXCIsXG5cdFwiZmF2aWNvbi5wbmdcIixcblx0XCJnbG9iYWwuY3NzXCIsXG5cdFwiaW50cm8uc3ZnXCIsXG5cdFwibG9nby0xNTAucG5nXCIsXG5cdFwibG9nby0zMTAucG5nXCIsXG5cdFwibWFuaWZlc3QuanNvblwiLFxuXHRcIm5ldHdvcmtkLnBuZ1wiLFxuXHRcInJvYm90cy50eHRcIixcblx0XCJzdW1tYXJ5X2Fib3V0X2xhcmdlLnBuZ1wiLFxuXHRcInN1bW1hcnlfbGFyZ2VfaW1hZ2UucG5nXCIsXG5cdFwidGFncy9icC5wbmdcIixcblx0XCJ0YWdzL2JwLndlYnBcIixcblx0XCJ0YWdzL2NpLnBuZ1wiLFxuXHRcInRhZ3MvY2kud2VicFwiLFxuXHRcInRhZ3MvZ3QucG5nXCIsXG5cdFwidGFncy9ndC53ZWJwXCIsXG5cdFwidGFncy9tbC5wbmdcIixcblx0XCJ0YWdzL21sLndlYnBcIixcblx0XCJ0YWdzL25scC5wbmdcIixcblx0XCJ0YWdzL25scC53ZWJwXCIsXG5cdFwidGFncy9wbC5wbmdcIixcblx0XCJ0YWdzL3BsLndlYnBcIixcblx0XCJ0YWdzL3JsLnBuZ1wiLFxuXHRcInRhZ3Mvcmwud2VicFwiLFxuXHRcInRhZ3MvcnAucG5nXCIsXG5cdFwidGFncy9ycC53ZWJwXCIsXG5cdFwidGFncy9zcC5wbmdcIixcblx0XCJ0YWdzL3NwLndlYnBcIlxuXTtcbmV4cG9ydCB7IGZpbGVzIGFzIGFzc2V0cyB9OyAvLyBsZWdhY3lcblxuZXhwb3J0IGNvbnN0IHNoZWxsID0gW1xuXHRcImNsaWVudC9jbGllbnQuN2IxODJjMWQuanNcIixcblx0XCJjbGllbnQvSGVhZC44NGRkOWQ5NC5qc1wiLFxuXHRcImNsaWVudC9UYWcuYzZlNDNjZDguanNcIixcblx0XCJjbGllbnQvaW5kZXguYWExMmE0MWYuanNcIixcblx0XCJjbGllbnQvUG9zdEZpbHRlci4wNDg1MTM3My5qc1wiLFxuXHRcImNsaWVudC9pbmRleC5hM2YzNTQ2Zi5qc1wiLFxuXHRcImNsaWVudC9ib29rbGlzdC5hMjU0ZmNjZi5qc1wiLFxuXHRcImNsaWVudC9pbmRleC40NmQzMGJkYy5qc1wiLFxuXHRcImNsaWVudC9bc2x1Z10uNWFlYTk4MmQuanNcIixcblx0XCJjbGllbnQvc2FwcGVyLWRldi1jbGllbnQuMWU3YTRhNWUuanNcIixcblx0XCJjbGllbnQvY2xpZW50LmMyZmVmYzcyLmpzXCJcbl07XG5cbmV4cG9ydCBjb25zdCByb3V0ZXMgPSBbXG5cdHsgcGF0dGVybjogL15cXC8kLyB9LFxuXHR7IHBhdHRlcm46IC9eXFwvYWJvdXRcXC8/JC8gfSxcblx0eyBwYXR0ZXJuOiAvXlxcL2Fib3V0XFwvYm9va2xpc3RcXC8/JC8gfSxcblx0eyBwYXR0ZXJuOiAvXlxcL2Jsb2dcXC8/JC8gfSxcblx0eyBwYXR0ZXJuOiAvXlxcL2Jsb2dcXC8oW15cXC9dKz8pXFwvPyQvIH1cbl07IiwiaW1wb3J0IHsgdGltZXN0YW1wLCBmaWxlcywgc2hlbGwsIHJvdXRlcyB9IGZyb20gJ0BzYXBwZXIvc2VydmljZS13b3JrZXInO1xuXG5jb25zdCBBU1NFVFMgPSBgY2FjaGUke3RpbWVzdGFtcH1gO1xuXG4vLyBgc2hlbGxgIGlzIGFuIGFycmF5IG9mIGFsbCB0aGUgZmlsZXMgZ2VuZXJhdGVkIGJ5IHRoZSBidW5kbGVyLFxuLy8gYGZpbGVzYCBpcyBhbiBhcnJheSBvZiBldmVyeXRoaW5nIGluIHRoZSBgc3RhdGljYCBkaXJlY3RvcnlcbmNvbnN0IHRvX2NhY2hlID0gc2hlbGwuY29uY2F0KGZpbGVzKTtcbmNvbnN0IGNhY2hlZCA9IG5ldyBTZXQodG9fY2FjaGUpO1xuXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBldmVudCA9PiB7XG5cdGV2ZW50LndhaXRVbnRpbChcblx0XHRjYWNoZXNcblx0XHRcdC5vcGVuKEFTU0VUUylcblx0XHRcdC50aGVuKGNhY2hlID0+IGNhY2hlLmFkZEFsbCh0b19jYWNoZSkpXG5cdFx0XHQudGhlbigoKSA9PiB7XG5cdFx0XHRcdHNlbGYuc2tpcFdhaXRpbmcoKTtcblx0XHRcdH0pXG5cdCk7XG59KTtcblxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdhY3RpdmF0ZScsIGV2ZW50ID0+IHtcblx0ZXZlbnQud2FpdFVudGlsKFxuXHRcdGNhY2hlcy5rZXlzKCkudGhlbihhc3luYyBrZXlzID0+IHtcblx0XHRcdC8vIGRlbGV0ZSBvbGQgY2FjaGVzXG5cdFx0XHRmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG5cdFx0XHRcdGlmIChrZXkgIT09IEFTU0VUUykgYXdhaXQgY2FjaGVzLmRlbGV0ZShrZXkpO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxmLmNsaWVudHMuY2xhaW0oKTtcblx0XHR9KVxuXHQpO1xufSk7XG5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBldmVudCA9PiB7XG5cdGlmIChldmVudC5yZXF1ZXN0Lm1ldGhvZCAhPT0gJ0dFVCcgfHwgZXZlbnQucmVxdWVzdC5oZWFkZXJzLmhhcygncmFuZ2UnKSkgcmV0dXJuO1xuXG5cdGNvbnN0IHVybCA9IG5ldyBVUkwoZXZlbnQucmVxdWVzdC51cmwpO1xuXG5cdC8vIGRvbid0IHRyeSB0byBoYW5kbGUgZS5nLiBkYXRhOiBVUklzXG5cdGlmICghdXJsLnByb3RvY29sLnN0YXJ0c1dpdGgoJ2h0dHAnKSkgcmV0dXJuO1xuXG5cdC8vIGlnbm9yZSBkZXYgc2VydmVyIHJlcXVlc3RzXG5cdGlmICh1cmwuaG9zdG5hbWUgPT09IHNlbGYubG9jYXRpb24uaG9zdG5hbWUgJiYgdXJsLnBvcnQgIT09IHNlbGYubG9jYXRpb24ucG9ydCkgcmV0dXJuO1xuXG5cdC8vIGFsd2F5cyBzZXJ2ZSBzdGF0aWMgZmlsZXMgYW5kIGJ1bmRsZXItZ2VuZXJhdGVkIGFzc2V0cyBmcm9tIGNhY2hlXG5cdGlmICh1cmwuaG9zdCA9PT0gc2VsZi5sb2NhdGlvbi5ob3N0ICYmIGNhY2hlZC5oYXModXJsLnBhdGhuYW1lKSkge1xuXHRcdGV2ZW50LnJlc3BvbmRXaXRoKGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KSk7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gZm9yIHBhZ2VzLCB5b3UgbWlnaHQgd2FudCB0byBzZXJ2ZSBhIHNoZWxsIGBzZXJ2aWNlLXdvcmtlci1pbmRleC5odG1sYCBmaWxlLFxuXHQvLyB3aGljaCBTYXBwZXIgaGFzIGdlbmVyYXRlZCBmb3IgeW91LiBJdCdzIG5vdCByaWdodCBmb3IgZXZlcnlcblx0Ly8gYXBwLCBidXQgaWYgaXQncyByaWdodCBmb3IgeW91cnMgdGhlbiB1bmNvbW1lbnQgdGhpcyBzZWN0aW9uXG5cdC8qXG5cdGlmICh1cmwub3JpZ2luID09PSBzZWxmLm9yaWdpbiAmJiByb3V0ZXMuZmluZChyb3V0ZSA9PiByb3V0ZS5wYXR0ZXJuLnRlc3QodXJsLnBhdGhuYW1lKSkpIHtcblx0XHRldmVudC5yZXNwb25kV2l0aChjYWNoZXMubWF0Y2goJy9zZXJ2aWNlLXdvcmtlci1pbmRleC5odG1sJykpO1xuXHRcdHJldHVybjtcblx0fVxuXHQqL1xuXG5cdGlmIChldmVudC5yZXF1ZXN0LmNhY2hlID09PSAnb25seS1pZi1jYWNoZWQnKSByZXR1cm47XG5cblx0Ly8gZm9yIGV2ZXJ5dGhpbmcgZWxzZSwgdHJ5IHRoZSBuZXR3b3JrIGZpcnN0LCBmYWxsaW5nIGJhY2sgdG9cblx0Ly8gY2FjaGUgaWYgdGhlIHVzZXIgaXMgb2ZmbGluZS4gKElmIHRoZSBwYWdlcyBuZXZlciBjaGFuZ2UsIHlvdVxuXHQvLyBtaWdodCBwcmVmZXIgYSBjYWNoZS1maXJzdCBhcHByb2FjaCB0byBhIG5ldHdvcmstZmlyc3Qgb25lLilcblx0ZXZlbnQucmVzcG9uZFdpdGgoXG5cdFx0Y2FjaGVzXG5cdFx0XHQub3Blbihgb2ZmbGluZSR7dGltZXN0YW1wfWApXG5cdFx0XHQudGhlbihhc3luYyBjYWNoZSA9PiB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChldmVudC5yZXF1ZXN0KTtcblx0XHRcdFx0XHRjYWNoZS5wdXQoZXZlbnQucmVxdWVzdCwgcmVzcG9uc2UuY2xvbmUoKSk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3BvbnNlO1xuXHRcdFx0XHR9IGNhdGNoKGVycikge1xuXHRcdFx0XHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2FjaGUubWF0Y2goZXZlbnQucmVxdWVzdCk7XG5cdFx0XHRcdFx0aWYgKHJlc3BvbnNlKSByZXR1cm4gcmVzcG9uc2U7XG5cblx0XHRcdFx0XHR0aHJvdyBlcnI7XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdCk7XG59KTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Q0FBQTtDQUNPLE1BQU0sU0FBUyxHQUFHLGFBQWEsQ0FBQztBQUN2QztDQUNPLE1BQU0sS0FBSyxHQUFHO0NBQ3JCLENBQUMsMkJBQTJCO0NBQzVCLENBQUMsT0FBTztDQUNSLENBQUMsNEJBQTRCO0NBQzdCLENBQUMsMkJBQTJCO0NBQzVCLENBQUMsaUNBQWlDO0NBQ2xDLENBQUMsZ0NBQWdDO0NBQ2pDLENBQUMsaUNBQWlDO0NBQ2xDLENBQUMsd0JBQXdCO0NBQ3pCLENBQUMsNEJBQTRCO0NBQzdCLENBQUMsNkJBQTZCO0NBQzlCLENBQUMsOEJBQThCO0NBQy9CLENBQUMsc0NBQXNDO0NBQ3ZDLENBQUMsNkJBQTZCO0NBQzlCLENBQUMsaUNBQWlDO0NBQ2xDLENBQUMsc0JBQXNCO0NBQ3ZCLENBQUMsNENBQTRDO0NBQzdDLENBQUMsc0NBQXNDO0NBQ3ZDLENBQUMsK0JBQStCO0NBQ2hDLENBQUMsK0JBQStCO0NBQ2hDLENBQUMsK0NBQStDO0NBQ2hELENBQUMsOENBQThDO0NBQy9DLENBQUMsOENBQThDO0NBQy9DLENBQUMsOENBQThDO0NBQy9DLENBQUMsNENBQTRDO0NBQzdDLENBQUMsd0NBQXdDO0NBQ3pDLENBQUMsMENBQTBDO0NBQzNDLENBQUMscUNBQXFDO0NBQ3RDLENBQUMsb0NBQW9DO0NBQ3JDLENBQUMsd0NBQXdDO0NBQ3pDLENBQUMsMEJBQTBCO0NBQzNCLENBQUMsd0NBQXdDO0NBQ3pDLENBQUMsc0NBQXNDO0NBQ3ZDLENBQUMsa0NBQWtDO0NBQ25DLENBQUMsbUlBQW1JO0NBQ3BJLENBQUMsdURBQXVEO0NBQ3hELENBQUMsdURBQXVEO0NBQ3hELENBQUMseURBQXlEO0NBQzFELENBQUMseURBQXlEO0NBQzFELENBQUMsNERBQTREO0NBQzdELENBQUMsNERBQTREO0NBQzdELENBQUMsOERBQThEO0NBQy9ELENBQUMsOERBQThEO0NBQy9ELENBQUMsNERBQTREO0NBQzdELENBQUMsMENBQTBDO0NBQzNDLENBQUMsK0NBQStDO0NBQ2hELENBQUMsYUFBYTtDQUNkLENBQUMsWUFBWTtDQUNiLENBQUMsV0FBVztDQUNaLENBQUMsY0FBYztDQUNmLENBQUMsY0FBYztDQUNmLENBQUMsZUFBZTtDQUNoQixDQUFDLGNBQWM7Q0FDZixDQUFDLFlBQVk7Q0FDYixDQUFDLHlCQUF5QjtDQUMxQixDQUFDLHlCQUF5QjtDQUMxQixDQUFDLGFBQWE7Q0FDZCxDQUFDLGNBQWM7Q0FDZixDQUFDLGFBQWE7Q0FDZCxDQUFDLGNBQWM7Q0FDZixDQUFDLGFBQWE7Q0FDZCxDQUFDLGNBQWM7Q0FDZixDQUFDLGFBQWE7Q0FDZCxDQUFDLGNBQWM7Q0FDZixDQUFDLGNBQWM7Q0FDZixDQUFDLGVBQWU7Q0FDaEIsQ0FBQyxhQUFhO0NBQ2QsQ0FBQyxjQUFjO0NBQ2YsQ0FBQyxhQUFhO0NBQ2QsQ0FBQyxjQUFjO0NBQ2YsQ0FBQyxhQUFhO0NBQ2QsQ0FBQyxjQUFjO0NBQ2YsQ0FBQyxhQUFhO0NBQ2QsQ0FBQyxjQUFjO0NBQ2YsQ0FBQyxDQUFDO0FBRUY7Q0FDTyxNQUFNLEtBQUssR0FBRztDQUNyQixDQUFDLDJCQUEyQjtDQUM1QixDQUFDLHlCQUF5QjtDQUMxQixDQUFDLHdCQUF3QjtDQUN6QixDQUFDLDBCQUEwQjtDQUMzQixDQUFDLCtCQUErQjtDQUNoQyxDQUFDLDBCQUEwQjtDQUMzQixDQUFDLDZCQUE2QjtDQUM5QixDQUFDLDBCQUEwQjtDQUMzQixDQUFDLDJCQUEyQjtDQUM1QixDQUFDLHNDQUFzQztDQUN2QyxDQUFDLDJCQUEyQjtDQUM1QixDQUFDOztDQzFGRCxNQUFNLE1BQU0sR0FBRyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ25DO0NBQ0E7Q0FDQTtDQUNBLE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7Q0FDckMsTUFBTSxNQUFNLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakM7Q0FDQSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLEtBQUssSUFBSTtDQUMxQyxDQUFDLEtBQUssQ0FBQyxTQUFTO0NBQ2hCLEVBQUUsTUFBTTtDQUNSLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQztDQUNoQixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztDQUN6QyxJQUFJLElBQUksQ0FBQyxNQUFNO0NBQ2YsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7Q0FDdkIsSUFBSSxDQUFDO0NBQ0wsRUFBRSxDQUFDO0NBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDSDtDQUNBLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsS0FBSyxJQUFJO0NBQzNDLENBQUMsS0FBSyxDQUFDLFNBQVM7Q0FDaEIsRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJO0NBQ25DO0NBQ0EsR0FBRyxLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRTtDQUMzQixJQUFJLElBQUksR0FBRyxLQUFLLE1BQU0sRUFBRSxNQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDakQsSUFBSTtBQUNKO0NBQ0EsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0NBQ3hCLEdBQUcsQ0FBQztDQUNKLEVBQUUsQ0FBQztDQUNILENBQUMsQ0FBQyxDQUFDO0FBQ0g7Q0FDQSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSTtDQUN4QyxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEtBQUssS0FBSyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPO0FBQ2xGO0NBQ0EsQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hDO0NBQ0E7Q0FDQSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPO0FBQzlDO0NBQ0E7Q0FDQSxDQUFDLElBQUksR0FBRyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU87QUFDeEY7Q0FDQTtDQUNBLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFO0NBQ2xFLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0NBQ2pELEVBQUUsT0FBTztDQUNULEVBQUU7QUFDRjtDQUNBO0NBQ0E7Q0FDQTtDQUNBO0NBQ0E7Q0FDQTtDQUNBO0NBQ0E7Q0FDQTtBQUNBO0NBQ0EsQ0FBQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxLQUFLLGdCQUFnQixFQUFFLE9BQU87QUFDdEQ7Q0FDQTtDQUNBO0NBQ0E7Q0FDQSxDQUFDLEtBQUssQ0FBQyxXQUFXO0NBQ2xCLEVBQUUsTUFBTTtDQUNSLElBQUksSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7Q0FDL0IsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLElBQUk7Q0FDeEIsSUFBSSxJQUFJO0NBQ1IsS0FBSyxNQUFNLFFBQVEsR0FBRyxNQUFNLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7Q0FDakQsS0FBSyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7Q0FDaEQsS0FBSyxPQUFPLFFBQVEsQ0FBQztDQUNyQixLQUFLLENBQUMsTUFBTSxHQUFHLEVBQUU7Q0FDakIsS0FBSyxNQUFNLFFBQVEsR0FBRyxNQUFNLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0NBQ3ZELEtBQUssSUFBSSxRQUFRLEVBQUUsT0FBTyxRQUFRLENBQUM7QUFDbkM7Q0FDQSxLQUFLLE1BQU0sR0FBRyxDQUFDO0NBQ2YsS0FBSztDQUNMLElBQUksQ0FBQztDQUNMLEVBQUUsQ0FBQztDQUNILENBQUMsQ0FBQyxDQUFDOzs7OyJ9
